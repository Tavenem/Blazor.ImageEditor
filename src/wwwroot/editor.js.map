{"version":3,"file":"editor.js","sources":["../ts/editor.js"],"sourcesContent":["class EllipseDrawTool {\r\n    constructor() {\r\n        this.originX = 0;\r\n        this.originY = 0;\r\n        this.drawingMode = 0;\r\n    }\r\n    make(startX, startY, endX, endY, options, shift) {\r\n        this.originX = startX;\r\n        this.originY = startY;\r\n        if (shift) {\r\n            const size = Math.max(Math.abs(startX - endX), Math.abs(startY - endY));\r\n            endX = startX > endX\r\n                ? startX - size\r\n                : startX + size;\r\n            endY = startY > endY\r\n                ? startY - size\r\n                : startY + size;\r\n        }\r\n        return new fabric.Ellipse({\r\n            left: endX < startX ? endX : startX,\r\n            top: endY < startY ? endY : startY,\r\n            rx: Math.abs(endX - startX) / 2,\r\n            ry: Math.abs(endX - startX) / 2,\r\n            ...options\r\n        });\r\n    }\r\n    resize(object, x, y, ctl, alt, shift) {\r\n        if (object instanceof fabric.Ellipse) {\r\n            if (shift) {\r\n                const size = Math.max(Math.abs(this.originX - x), Math.abs(this.originY - y));\r\n                x = this.originX > x\r\n                    ? this.originX - size\r\n                    : this.originX + size;\r\n                y = this.originY > y\r\n                    ? this.originY - size\r\n                    : this.originY + size;\r\n            }\r\n            object.set({\r\n                originX: this.originX > x ? 'right' : 'left',\r\n                originY: this.originY > y ? 'bottom' : 'top',\r\n                rx: Math.abs(this.originX - x) / 2,\r\n                ry: Math.abs(this.originY - y) / 2,\r\n            }).setCoords();\r\n        }\r\n        return object;\r\n    }\r\n}\r\nclass LineDrawTool {\r\n    constructor() {\r\n        this.drawingMode = 1;\r\n    }\r\n    make(startX, startY, endX, endY, options, shift) {\r\n        if (shift) {\r\n            const sizeX = Math.abs(startX - endX);\r\n            const sizeY = Math.abs(startY - endY);\r\n            const maxSize = Math.max(sizeX, sizeY);\r\n            if (Math.abs(sizeX - sizeY) <= 3) {\r\n                endX = startX > endX\r\n                    ? startX - maxSize\r\n                    : startX + maxSize;\r\n                endY = startY > endY\r\n                    ? startY - maxSize\r\n                    : startY + maxSize;\r\n            }\r\n            else if (sizeX > sizeY) {\r\n                endX = startX > endX\r\n                    ? startX - maxSize\r\n                    : startX + maxSize;\r\n                endY = startY;\r\n            }\r\n            else {\r\n                endX = startX;\r\n                endY = startY > endY\r\n                    ? startY - maxSize\r\n                    : startY + maxSize;\r\n            }\r\n        }\r\n        return new fabric.Line([startX, startY, endX, endY], options);\r\n    }\r\n    resize(object, x, y, ctl, alt, shift) {\r\n        if (object instanceof fabric.Line) {\r\n            if (shift) {\r\n                const sizeX = Math.abs((object.x1 ?? 0) - x);\r\n                const sizeY = Math.abs((object.y1 ?? 0) - y);\r\n                const maxSize = Math.max(sizeX, sizeY);\r\n                if (Math.abs(sizeX - sizeY) <= 3) {\r\n                    x = (object.x1 ?? 0) > x\r\n                        ? (object.x1 ?? 0) - maxSize\r\n                        : (object.x1 ?? 0) + maxSize;\r\n                    y = (object.y1 ?? 0) > y\r\n                        ? (object.y1 ?? 0) - maxSize\r\n                        : (object.y1 ?? 0) + maxSize;\r\n                }\r\n                else if (sizeX > sizeY) {\r\n                    x = (object.x1 ?? 0) > x\r\n                        ? (object.x1 ?? 0) - maxSize\r\n                        : (object.x1 ?? 0) + maxSize;\r\n                    y = (object.y1 ?? 0);\r\n                }\r\n                else {\r\n                    x = (object.x1 ?? 0);\r\n                    y = (object.y1 ?? 0) > y\r\n                        ? (object.y1 ?? 0) - maxSize\r\n                        : (object.y1 ?? 0) + maxSize;\r\n                }\r\n            }\r\n            object.set({\r\n                x2: x,\r\n                y2: y\r\n            }).setCoords();\r\n        }\r\n        return object;\r\n    }\r\n}\r\nclass PathDrawTool {\r\n    constructor() {\r\n        this.drawingMode = 1;\r\n    }\r\n    addPoint(object, x, y) {\r\n        const path = object.path;\r\n        const points = path.length + 1;\r\n        path.push([\r\n            'Q',\r\n            x, y,\r\n            x, y\r\n        ]);\r\n        const center = object.getCenterPoint(), newPathObject = new fabric.Path(path);\r\n        object.set({\r\n            path: newPathObject.path,\r\n            width: newPathObject.width,\r\n            height: newPathObject.height,\r\n            dirty: true,\r\n            pathOffset: newPathObject.pathOffset\r\n        }).setCoords();\r\n        object.setPositionByOrigin(center, 'center', 'center');\r\n        this.addControlPoint(object, points - 1);\r\n    }\r\n    make(startX, startY, endX, endY, options, shift) {\r\n        const path = [[], []];\r\n        if (shift) {\r\n            const sizeX = Math.abs(startX - endX);\r\n            const sizeY = Math.abs(startY - endY);\r\n            const maxSize = Math.max(sizeX, sizeY);\r\n            if (Math.abs(sizeX - sizeY) <= 3) {\r\n                endX = startX > endX\r\n                    ? startX - maxSize\r\n                    : startX + maxSize;\r\n                endY = startY > endY\r\n                    ? startY - maxSize\r\n                    : startY + maxSize;\r\n            }\r\n            else if (sizeX > sizeY) {\r\n                endX = startX > endX\r\n                    ? startX - maxSize\r\n                    : startX + maxSize;\r\n                endY = startY;\r\n            }\r\n            else {\r\n                endX = startX;\r\n                endY = startY > endY\r\n                    ? startY - maxSize\r\n                    : startY + maxSize;\r\n            }\r\n        }\r\n        path[0][0] = 'M';\r\n        path[0][1] = startX;\r\n        path[0][2] = startY;\r\n        path[1][0] = 'Q';\r\n        path[1][1] = endX;\r\n        path[1][2] = endY;\r\n        path[1][3] = endX;\r\n        path[1][4] = endY;\r\n        const obj = new fabric.Path(path, options);\r\n        obj.controls = { ...fabric.Object.prototype.controls };\r\n        obj.controls['csc'] = new fabric.Control({\r\n            positionHandler: this.curvePositionHandler,\r\n            actionHandler: this.curveActionHandler,\r\n            actionName: 'modifyCurve',\r\n            pointIndex: 0\r\n        });\r\n        this.addControlPoint(obj, 1);\r\n        return obj;\r\n    }\r\n    resize(object, x, y, ctl, alt, shift) {\r\n        if (object instanceof fabric.Path && object.path) {\r\n            const objectPath = object.path;\r\n            const movingPointIndex = objectPath.length - 1;\r\n            if (shift && movingPointIndex === 1) {\r\n                const sizeX = Math.abs(objectPath[0][1] - x);\r\n                const sizeY = Math.abs(objectPath[0][2] - y);\r\n                const maxSize = Math.max(sizeX, sizeY);\r\n                if (Math.abs(sizeX - sizeY) <= 3) {\r\n                    x = objectPath[0][1] > x\r\n                        ? objectPath[0][1] - maxSize\r\n                        : objectPath[0][1] + maxSize;\r\n                    y = objectPath[0][2] > y\r\n                        ? objectPath[0][2] - maxSize\r\n                        : objectPath[0][2] + maxSize;\r\n                }\r\n                else if (sizeX > sizeY) {\r\n                    x = objectPath[0][1] > x\r\n                        ? objectPath[0][1] - maxSize\r\n                        : objectPath[0][1] + maxSize;\r\n                    y = objectPath[0][2];\r\n                }\r\n                else {\r\n                    x = objectPath[0][1];\r\n                    y = objectPath[0][2] > y\r\n                        ? objectPath[0][2] - maxSize\r\n                        : objectPath[0][2] + maxSize;\r\n                }\r\n            }\r\n            const path = objectPath;\r\n            path[movingPointIndex][1] = x;\r\n            path[movingPointIndex][2] = y;\r\n            path[movingPointIndex][3] = x;\r\n            path[movingPointIndex][4] = y;\r\n            const center = object.getCenterPoint(), newPathObject = new fabric.Path(path);\r\n            object.set({\r\n                path: newPathObject.path,\r\n                width: newPathObject.width,\r\n                height: newPathObject.height,\r\n                dirty: true,\r\n                pathOffset: newPathObject.pathOffset\r\n            });\r\n            if (movingPointIndex === 1) {\r\n                object.set({\r\n                    left: x < objectPath[0][1]\r\n                        ? x\r\n                        : objectPath[0][1],\r\n                    top: y < objectPath[0][2]\r\n                        ? y\r\n                        : objectPath[0][2]\r\n                });\r\n            }\r\n            object.setCoords();\r\n            if (movingPointIndex !== 1) {\r\n                object.setPositionByOrigin(center, 'center', 'center');\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n    addControlPoint(object, index) {\r\n        object.controls[`cqc${index}`] = new fabric.Control({\r\n            positionHandler: this.curvePositionHandler,\r\n            actionHandler: this.curveActionHandler,\r\n            actionName: 'modifyCurve',\r\n            pointIndex: index,\r\n            pointIsCurve: true,\r\n        });\r\n        object.controls[`cpc${index}`] = new fabric.Control({\r\n            positionHandler: this.curvePositionHandler,\r\n            actionHandler: this.curveActionHandler,\r\n            actionName: 'modifyCurve',\r\n            pointIndex: index\r\n        });\r\n    }\r\n    curveActionHandler(eventData, transform, x, y) {\r\n        if (!(transform.target instanceof fabric.Path)) {\r\n            return false;\r\n        }\r\n        const activeItem = transform.target, path = activeItem.path;\r\n        const currentControl = activeItem.controls[activeItem.__corner], baseSize = activeItem._getNonTransformedDimensions(), size = activeItem._getTransformedDimensions(), strokeWidth = activeItem.strokeWidth ?? 1, stroke = {\r\n            x: activeItem.strokeUniform ? strokeWidth : strokeWidth * (activeItem.scaleX ?? 1),\r\n            y: activeItem.strokeUniform ? strokeWidth : strokeWidth * (activeItem.scaleY ?? 1)\r\n        }, scaleX = (baseSize.x - strokeWidth) / (size.x - stroke.x), scaleY = (baseSize.y - strokeWidth) / (size.y - stroke.x), localPoint = activeItem.toLocalPoint(new fabric.Point(x, y), 'center', 'center'), finalLocalPoint = new fabric.Point(localPoint.x * scaleX + activeItem.pathOffset.x, localPoint.y * scaleY + activeItem.pathOffset.y);\r\n        if (currentControl.pointIndex === 0) {\r\n            path[0][1] = finalLocalPoint.x;\r\n            path[0][2] = finalLocalPoint.y;\r\n        }\r\n        else if (currentControl.pointIsCurve) {\r\n            if (editor && editor.shift) {\r\n                path[currentControl.pointIndex][1] = path[currentControl.pointIndex][3];\r\n                path[currentControl.pointIndex][2] = path[currentControl.pointIndex][4];\r\n            }\r\n            else {\r\n                path[currentControl.pointIndex][1] = finalLocalPoint.x;\r\n                path[currentControl.pointIndex][2] = finalLocalPoint.y;\r\n            }\r\n        }\r\n        else {\r\n            if ((path[currentControl.pointIndex][1] === path[currentControl.pointIndex][3])\r\n                && (path[currentControl.pointIndex][2] === path[currentControl.pointIndex][4])) {\r\n                path[currentControl.pointIndex][1] = finalLocalPoint.x;\r\n                path[currentControl.pointIndex][2] = finalLocalPoint.y;\r\n            }\r\n            path[currentControl.pointIndex][3] = finalLocalPoint.x;\r\n            path[currentControl.pointIndex][4] = finalLocalPoint.y;\r\n        }\r\n        const center = activeItem.getCenterPoint(), newPathObject = new fabric.Path(path);\r\n        activeItem.set({\r\n            path: newPathObject.path,\r\n            width: newPathObject.width,\r\n            height: newPathObject.height,\r\n            dirty: true,\r\n            pathOffset: newPathObject.pathOffset\r\n        }).setCoords();\r\n        activeItem.setPositionByOrigin(center, 'center', 'center');\r\n        return true;\r\n    }\r\n    curvePositionHandler(dim, finalMatrix, fabricObject) {\r\n        if (!(fabricObject instanceof fabric.Path)) {\r\n            return new fabric.Point(0, 0);\r\n        }\r\n        const path = fabricObject.path;\r\n        let x, y;\r\n        if (this.pointIndex === 0) {\r\n            x = path[0][1] - fabricObject.pathOffset.x;\r\n            y = path[0][2] - fabricObject.pathOffset.y;\r\n        }\r\n        else if (this.pointIsCurve) {\r\n            if ((path[this.pointIndex][1] === path[this.pointIndex][3]) && (path[this.pointIndex][2] === path[this.pointIndex][4])) {\r\n                const previousPointX = this.pointIndex === 1 ? 1 : 3;\r\n                const previousPointY = this.pointIndex === 1 ? 2 : 4;\r\n                x = ((path[this.pointIndex - 1][previousPointX] + path[this.pointIndex][3]) / 2) - fabricObject.pathOffset.x;\r\n                y = ((path[this.pointIndex - 1][previousPointY] + path[this.pointIndex][4]) / 2) - fabricObject.pathOffset.y;\r\n            }\r\n            else {\r\n                x = path[this.pointIndex][1] - fabricObject.pathOffset.x;\r\n                y = path[this.pointIndex][2] - fabricObject.pathOffset.y;\r\n            }\r\n        }\r\n        else {\r\n            x = path[this.pointIndex][3] - fabricObject.pathOffset.x;\r\n            y = path[this.pointIndex][4] - fabricObject.pathOffset.y;\r\n        }\r\n        if (fabricObject.canvas\r\n            && fabricObject.canvas.viewportTransform) {\r\n            return fabric.util.transformPoint(new fabric.Point(x, y), fabric.util.multiplyTransformMatrices(fabricObject.canvas.viewportTransform, fabricObject.calcTransformMatrix()));\r\n        }\r\n        else {\r\n            return fabric.util.transformPoint(new fabric.Point(x, y), fabricObject.calcTransformMatrix());\r\n        }\r\n    }\r\n}\r\nclass RectangleDrawTool {\r\n    constructor() {\r\n        this.originX = 0;\r\n        this.originY = 0;\r\n        this.drawingMode = 2;\r\n    }\r\n    make(startX, startY, endX, endY, options, shift) {\r\n        this.originX = startX;\r\n        this.originY = startY;\r\n        if (shift) {\r\n            const size = Math.max(Math.abs(startX - endX), Math.abs(startY - endY));\r\n            endX = startX > endX\r\n                ? startX - size\r\n                : startX + size;\r\n            endY = startY > endY\r\n                ? startY - size\r\n                : startY + size;\r\n        }\r\n        return new fabric.Rect({\r\n            left: endX < startX ? endX : startX,\r\n            top: endY < startY ? endY : startY,\r\n            width: Math.abs(startX - endX),\r\n            height: Math.abs(startY - endY),\r\n            ...options\r\n        });\r\n    }\r\n    resize(object, x, y, ctl, alt, shift) {\r\n        if (object instanceof fabric.Rect) {\r\n            if (shift) {\r\n                const size = Math.max(Math.abs(this.originX - x), Math.abs(this.originY - y));\r\n                x = this.originX > x\r\n                    ? this.originX - size\r\n                    : this.originX + size;\r\n                y = this.originY > y\r\n                    ? this.originY - size\r\n                    : this.originY + size;\r\n            }\r\n            object.set({\r\n                originX: this.originX > x ? 'right' : 'left',\r\n                originY: this.originY > y ? 'bottom' : 'top',\r\n                width: Math.abs(this.originX - x),\r\n                height: Math.abs(this.originY - y),\r\n            }).setCoords();\r\n        }\r\n        return object;\r\n    }\r\n}\r\nclass TextDrawTool {\r\n    constructor() {\r\n        this.originX = 0;\r\n        this.originY = 0;\r\n        this.drawingMode = 4;\r\n    }\r\n    make(startX, startY, endX, endY, options, shift, font) {\r\n        this.originX = startX;\r\n        this.originY = startY;\r\n        let sizeX = endX - startX;\r\n        let sizeY = endY - startY;\r\n        let size = 0;\r\n        if (shift) {\r\n            const absSizeX = Math.abs(sizeX);\r\n            const absSizeY = Math.abs(sizeY);\r\n            const xGreater = absSizeX >= absSizeY;\r\n            const maxSize = xGreater ? sizeX : sizeY;\r\n            if (Math.abs(absSizeX - absSizeY) <= 3) {\r\n                if (xGreater) {\r\n                    sizeX = maxSize;\r\n                    sizeY = maxSize * (sizeX >= 0 !== sizeY >= 0 ? -1 : 1);\r\n                }\r\n                else {\r\n                    sizeX = maxSize * (sizeX >= 0 !== sizeY >= 0 ? -1 : 1);\r\n                    sizeY = maxSize;\r\n                }\r\n                size = Math.abs(Math.sqrt((maxSize * maxSize) * 2));\r\n            }\r\n            else if (xGreater) {\r\n                sizeY = 0;\r\n                size = Math.abs(maxSize);\r\n            }\r\n            else {\r\n                sizeX = 0;\r\n                size = Math.abs(maxSize);\r\n            }\r\n        }\r\n        else {\r\n            size = Math.abs(Math.sqrt((sizeX * sizeX) + (sizeY * sizeY)));\r\n        }\r\n        let angle = Math.atan2(sizeY, sizeX);\r\n        angle *= 180 / Math.PI;\r\n        angle -= 90;\r\n        const opt = {\r\n            left: endX < startX ? endX : startX,\r\n            top: endY < startY ? endY : startY,\r\n            fontSize: size,\r\n            angle: angle,\r\n            fill: options.fill || (!options.stroke || options.stroke === 'transparent' ? 'black' : options.stroke),\r\n            stroke: options.stroke === 'transparent'\r\n                && (!options.fill || options.fill === 'transparent') ? 'black' : options.stroke,\r\n            strokeWidth: options.strokeWidth,\r\n            strokeUniform: true,\r\n            perPixelTargetFind: true,\r\n            selectable: true,\r\n        };\r\n        if (font) {\r\n            opt.fontFamily = font;\r\n        }\r\n        const text = new fabric.IText('', opt);\r\n        text.controls['tqc'] = new fabric.Control({\r\n            positionHandler: this.textCurvePositionHandler,\r\n            actionHandler: this.textCurveActionHandler,\r\n            actionName: 'modifyTextCurve'\r\n        });\r\n        text.enterEditing();\r\n        return text;\r\n    }\r\n    resize(object, x, y, ctl, alt, shift) {\r\n        if (object instanceof fabric.IText) {\r\n            let sizeX = x - this.originX;\r\n            let sizeY = y - this.originY;\r\n            let size = 0;\r\n            if (shift) {\r\n                const absSizeX = Math.abs(sizeX);\r\n                const absSizeY = Math.abs(sizeY);\r\n                const xGreater = absSizeX >= absSizeY;\r\n                const maxSize = xGreater ? sizeX : sizeY;\r\n                if (Math.abs(absSizeX - absSizeY) <= 3) {\r\n                    if (xGreater) {\r\n                        sizeX = maxSize;\r\n                        sizeY = maxSize * (sizeX >= 0 !== sizeY >= 0 ? -1 : 1);\r\n                    }\r\n                    else {\r\n                        sizeX = maxSize * (sizeX >= 0 !== sizeY >= 0 ? -1 : 1);\r\n                        sizeY = maxSize;\r\n                    }\r\n                    size = Math.abs(Math.sqrt((maxSize * maxSize) * 2));\r\n                }\r\n                else if (xGreater) {\r\n                    sizeY = 0;\r\n                    size = Math.abs(maxSize);\r\n                }\r\n                else {\r\n                    sizeX = 0;\r\n                    size = Math.abs(maxSize);\r\n                }\r\n            }\r\n            else {\r\n                size = Math.abs(Math.sqrt((sizeX * sizeX) + (sizeY * sizeY)));\r\n            }\r\n            let angle = Math.atan2(sizeY, sizeX);\r\n            angle *= 180 / Math.PI;\r\n            angle -= 90;\r\n            object.set({\r\n                fontSize: size,\r\n                angle: angle,\r\n            }).setCoords();\r\n        }\r\n        return object;\r\n    }\r\n    textCurveActionHandler(eventData, transform, x, y) {\r\n        const activeItem = transform.target;\r\n        if (!editor || !(activeItem instanceof fabric.IText)) {\r\n            return false;\r\n        }\r\n        if (editor && editor.shift) {\r\n            activeItem.curvePoint = { x: 0, y: 0 };\r\n            activeItem.path = undefined;\r\n            return activeItem.curvePoint\r\n                && (activeItem.curvePoint.x !== 0\r\n                    || activeItem.curvePoint.y !== 0);\r\n        }\r\n        const width = activeItem.width, rotateMatrix = activeItem._calcRotateMatrix(), translateMatrix = activeItem._calcTranslateMatrix(), vpt = activeItem.getViewportTransform(), startMatrix = fabric.util.multiplyTransformMatrices(vpt, translateMatrix);\r\n        let finalMatrix = fabric.util.multiplyTransformMatrices(startMatrix, rotateMatrix);\r\n        finalMatrix = fabric.util.multiplyTransformMatrices(finalMatrix, [1 / vpt[0], 0, 0, 1 / vpt[3], 0, 0]);\r\n        const dim = activeItem._calculateCurrentDimensions(), pathLeft = fabric.util.transformPoint(new fabric.Point(-0.5 * dim.x, 0), finalMatrix), pathRight = fabric.util.transformPoint(new fabric.Point(0.5 * dim.x, 0), finalMatrix), path = [[\r\n                'M',\r\n                pathLeft.x, pathLeft.y\r\n            ], [\r\n                'Q',\r\n                x, y,\r\n                pathRight.x, pathRight.y\r\n            ]], pathObject = new fabric.Path(path), curvePoint = fabric.util.transformPoint(new fabric.Point(x, y), fabric.util.invertTransform(finalMatrix)), scaledCurvePoint = { x: curvePoint.x / dim.x, y: curvePoint.y / dim.y };\r\n        activeItem.curvePoint = scaledCurvePoint;\r\n        editor.fabricCanvas.add(pathObject);\r\n        pathObject.set({ width: width }).setCoords();\r\n        activeItem.set({ path: pathObject });\r\n        editor.fabricCanvas.remove(pathObject);\r\n        return true;\r\n    }\r\n    textCurvePositionHandler(dim, finalMatrix, fabricObject) {\r\n        if (!(fabricObject instanceof fabric.IText)) {\r\n            return new fabric.Point(0, 0);\r\n        }\r\n        if (!fabricObject.curvePoint) {\r\n            fabricObject.curvePoint = { x: 0, y: 0 };\r\n        }\r\n        return fabric.util.transformPoint(new fabric.Point(fabricObject.curvePoint.x * dim.x, fabricObject.curvePoint.y * dim.y), finalMatrix);\r\n    }\r\n}\r\nclass TriangleDrawTool {\r\n    constructor() {\r\n        this.originX = 0;\r\n        this.originY = 0;\r\n        this.drawingMode = 5;\r\n    }\r\n    make(startX, startY, endX, endY, options, shift) {\r\n        this.originX = startX;\r\n        this.originY = startY;\r\n        if (shift) {\r\n            const size = Math.max(Math.abs(startX - endX), Math.abs(startY - endY));\r\n            endX = startX > endX\r\n                ? startX - size\r\n                : startX + size;\r\n            endY = startY > endY\r\n                ? startY - size\r\n                : startY + size;\r\n        }\r\n        return new fabric.Triangle({\r\n            left: endX < startX ? endX : startX,\r\n            top: endY < startY ? endY : startY,\r\n            width: Math.abs(startX - endX),\r\n            height: Math.abs(startY - endY),\r\n            ...options\r\n        });\r\n    }\r\n    resize(object, x, y, ctl, alt, shift) {\r\n        if (object instanceof fabric.Triangle) {\r\n            if (shift) {\r\n                const size = Math.max(Math.abs(this.originX - x), Math.abs(this.originY - y));\r\n                x = this.originX > x\r\n                    ? this.originX - size\r\n                    : this.originX + size;\r\n                y = this.originY > y\r\n                    ? this.originY - size\r\n                    : this.originY + size;\r\n            }\r\n            object.set({\r\n                originX: this.originX > x ? 'right' : 'left',\r\n                originY: this.originY > y ? 'bottom' : 'top',\r\n                width: Math.abs(this.originX - x),\r\n                height: Math.abs(this.originY - y),\r\n            }).setCoords();\r\n        }\r\n        return object;\r\n    }\r\n}\r\nclass StateManager {\r\n    constructor(fabricCanvas) {\r\n        this.fabricCanvas = fabricCanvas;\r\n        this._locked = false;\r\n        this._maxCount = 100;\r\n        this._redoStack = [];\r\n        this._undoStack = [];\r\n        this._currentState = fabricCanvas.toDatalessJSON();\r\n    }\r\n    redo(callback) {\r\n        this.applyState(this._undoStack, this._redoStack.pop(), callback);\r\n    }\r\n    saveState() {\r\n        if (this._locked) {\r\n            return;\r\n        }\r\n        if (this._undoStack.length >= this._maxCount) {\r\n            this._undoStack.shift();\r\n        }\r\n        this._undoStack.push(this._currentState);\r\n        this._currentState = this.fabricCanvas.toDatalessJSON();\r\n        this._redoStack = [];\r\n    }\r\n    undo(callback) {\r\n        this.applyState(this._redoStack, this._undoStack.pop(), callback);\r\n    }\r\n    applyState(stack, state, callback) {\r\n        if (!state) {\r\n            return;\r\n        }\r\n        stack.push(this._currentState);\r\n        this._currentState = state;\r\n        const self = this;\r\n        this._locked = true;\r\n        this.fabricCanvas.loadFromJSON(this._currentState, function () {\r\n            if (typeof callback === 'function') {\r\n                callback();\r\n            }\r\n            self._locked = false;\r\n        });\r\n    }\r\n}\r\nclass EditorClipboard {\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n    }\r\n    copy(callback) {\r\n        this.editor.fabricCanvas.getActiveObject().clone((object) => {\r\n            this._clipObject = object;\r\n            if (typeof (callback) === 'function') {\r\n                callback();\r\n            }\r\n        });\r\n    }\r\n    cut() {\r\n        this.copy(() => this.editor.deleteObjects());\r\n    }\r\n    paste() {\r\n        if (!this._clipObject) {\r\n            return;\r\n        }\r\n        this._clipObject.clone((clonedObject) => {\r\n            this.editor.fabricCanvas.discardActiveObject();\r\n            if (clonedObject.type === 'activeSelection') {\r\n                clonedObject.canvas = this.editor.fabricCanvas;\r\n                let self = this;\r\n                clonedObject.forEachObject(function (obj) {\r\n                    self.editor.fabricCanvas.add(obj);\r\n                });\r\n                clonedObject.setCoords();\r\n            }\r\n            else {\r\n                this.editor.fabricCanvas.add(clonedObject);\r\n            }\r\n            this.editor.fabricCanvas.setActiveObject(clonedObject);\r\n            this.editor.fabricCanvas.requestRenderAll();\r\n            this.editor.stateManager.saveState();\r\n        });\r\n    }\r\n}\r\nclass Editor {\r\n    constructor(editorCanvas) {\r\n        this._alt = false;\r\n        this._ctl = false;\r\n        this._shift = false;\r\n        this._space = false;\r\n        this._aspectRatio = 4 / 3;\r\n        this._cursorMode = 0;\r\n        this._enableRotation = true;\r\n        this._lastX = 0;\r\n        this._lastY = 0;\r\n        this._listeningForKeys = true;\r\n        this._mouseDown = false;\r\n        this._moving = false;\r\n        this._panning = false;\r\n        this._redraw = false;\r\n        this.editorCanvas = editorCanvas;\r\n        this._drawTools = [\r\n            new EllipseDrawTool(),\r\n            new LineDrawTool(),\r\n            new RectangleDrawTool(),\r\n            new PathDrawTool(),\r\n            new TextDrawTool(),\r\n            new TriangleDrawTool(),\r\n        ];\r\n        this._drawTool = this._drawTools[1];\r\n        this._drawToolOptions = {\r\n            fill: '',\r\n            shadow: '',\r\n            stroke: 'black',\r\n            strokeWidth: 1,\r\n            perPixelTargetFind: true,\r\n            selectable: true,\r\n            strokeUniform: true,\r\n        };\r\n        this.fabricCanvas = new fabric.Canvas(this.editorCanvas, { selection: false });\r\n        if (this.editorCanvas.parentElement\r\n            && this.editorCanvas.parentElement.parentElement) {\r\n            const bounds = this.editorCanvas.parentElement.parentElement.getBoundingClientRect();\r\n            this.fabricCanvas.setDimensions({ width: bounds.width, height: Math.round(bounds.width / this._aspectRatio) });\r\n        }\r\n        this.initializeEvents();\r\n        this.stateManager = new StateManager(this.fabricCanvas);\r\n        this.clipboard = new EditorClipboard(this);\r\n    }\r\n    get alt() { return this._alt; }\r\n    get ctl() { return this._ctl; }\r\n    get shift() { return this._shift; }\r\n    get space() { return this._space; }\r\n    bringForward() {\r\n        this.fabricCanvas.getActiveObject().bringForward(true);\r\n    }\r\n    bringToFront() {\r\n        this.fabricCanvas.getActiveObject().bringToFront();\r\n    }\r\n    clear() {\r\n        this.fabricCanvas.clear();\r\n    }\r\n    copy() {\r\n        this.clipboard.copy();\r\n    }\r\n    cut() {\r\n        this.clipboard.cut();\r\n    }\r\n    dispose() {\r\n        window.removeEventListener(\"resize\", this.resizeEvent);\r\n        this.fabricCanvas.dispose();\r\n    }\r\n    deleteObjects() {\r\n        this.fabricCanvas.remove(...this.fabricCanvas.getActiveObjects());\r\n        this.fabricCanvas.discardActiveObject();\r\n        this.saveState();\r\n    }\r\n    enableRotation(value) {\r\n        if (this._enableRotation === value) {\r\n            return;\r\n        }\r\n        this._enableRotation = value;\r\n        this.fabricCanvas.forEachObject((obj) => {\r\n            obj.setControlVisible('mtr', value);\r\n        });\r\n    }\r\n    paste() {\r\n        this.clipboard.paste();\r\n    }\r\n    redo() {\r\n        this.stateManager.redo();\r\n    }\r\n    resizeEvent() {\r\n        if (this._resizeTimeout) {\r\n            clearTimeout(this._resizeTimeout);\r\n        }\r\n        const handler = () => {\r\n            if (this.editorCanvas.parentElement\r\n                && this.editorCanvas.parentElement.parentElement) {\r\n                this.fabricCanvas.setDimensions({\r\n                    width: \"10px\",\r\n                    height: \"10px\",\r\n                }, {\r\n                    cssOnly: true\r\n                });\r\n                this.resizeEventInner();\r\n            }\r\n        };\r\n        this._resizeTimeout = setTimeout(handler, 250);\r\n    }\r\n    sendBackwards() {\r\n        this.fabricCanvas.getActiveObject().sendBackwards(true);\r\n    }\r\n    sendToBack() {\r\n        this.fabricCanvas.getActiveObject().sendToBack();\r\n    }\r\n    setBackgroundImage(imageUrl) {\r\n        this._backgroundUrl = imageUrl;\r\n        if (imageUrl\r\n            && this.editorCanvas.parentElement\r\n            && this.editorCanvas.parentElement.parentElement) {\r\n            const self = this;\r\n            fabric.Image.fromURL(imageUrl, function (image) {\r\n                if (!image || !image.width || !image.height) {\r\n                    self.fabricCanvas.setBackgroundImage('', self.fabricCanvas.renderAll.bind(self.fabricCanvas));\r\n                    return;\r\n                }\r\n                self._aspectRatio = image.width / image.height;\r\n                if (self._borderWidth) {\r\n                    self.fabricCanvas.setDimensions({\r\n                        width: image.width + (self._borderWidth * 2),\r\n                        height: image.height + (self._borderWidth * 2),\r\n                    }, {\r\n                        backstoreOnly: true\r\n                    });\r\n                    self.fabricCanvas.setBackgroundImage(image, self.fabricCanvas.renderAll.bind(self.fabricCanvas), {\r\n                        top: self._borderWidth,\r\n                        left: self._borderWidth,\r\n                        originX: 'left',\r\n                        originY: 'top',\r\n                    });\r\n                }\r\n                else {\r\n                    self.fabricCanvas.setDimensions({\r\n                        width: image.width,\r\n                        height: image.height\r\n                    }, {\r\n                        backstoreOnly: true\r\n                    });\r\n                    self.fabricCanvas.setBackgroundImage(image, self.fabricCanvas.renderAll.bind(self.fabricCanvas));\r\n                }\r\n                self.resizeEvent();\r\n            });\r\n        }\r\n        else {\r\n            this.fabricCanvas.setBackgroundImage('', this.fabricCanvas.renderAll.bind(this.fabricCanvas));\r\n        }\r\n        this.saveState();\r\n    }\r\n    setBorderColor(color) {\r\n        if (this._borderColor !== color) {\r\n            this._borderColor = color;\r\n            if (this._borderWidth) {\r\n                this.drawBorder();\r\n            }\r\n        }\r\n    }\r\n    setBorderPercent(value) {\r\n        if (!value) {\r\n            this.setBorderWidth(value);\r\n            return;\r\n        }\r\n        const size = Math.min(this.fabricCanvas.width ?? 0, this.fabricCanvas.height ?? 0);\r\n        if (size > 0) {\r\n            this.setBorderWidth(size * value);\r\n        }\r\n    }\r\n    setBorderWidth(value) {\r\n        if (this._borderWidth !== value) {\r\n            this._borderWidth = value;\r\n            this.drawBorder();\r\n            if (this._backgroundUrl) {\r\n                this.setBackgroundImage(this._backgroundUrl);\r\n            }\r\n        }\r\n    }\r\n    setDrawingMode(mode) {\r\n        if (mode === 6) {\r\n            this.fabricCanvas.isDrawingMode = true;\r\n        }\r\n        else {\r\n            this.fabricCanvas.isDrawingMode = false;\r\n            this._drawTool = this._drawTools[mode];\r\n        }\r\n    }\r\n    setFillColor(color) {\r\n        if (color) {\r\n            this._drawToolOptions.fill = color;\r\n        }\r\n        else {\r\n            this._drawToolOptions.fill = '';\r\n        }\r\n        this.setToolOptions();\r\n    }\r\n    setFont(font) {\r\n        if (!font) {\r\n            return;\r\n        }\r\n        const self = this;\r\n        WebFont.load({\r\n            classes: false,\r\n            google: {\r\n                families: [font]\r\n            },\r\n            active: function () {\r\n                self._font = font;\r\n                const obj = self.fabricCanvas.getActiveObject();\r\n                if (obj instanceof fabric.IText) {\r\n                    obj.set({ fontFamily: font });\r\n                }\r\n            },\r\n        });\r\n    }\r\n    setLineCap(cap) {\r\n        this._drawToolOptions.strokeLineCap = cap;\r\n        this.setToolOptions();\r\n    }\r\n    setRedraw(value) {\r\n        this._redraw = value;\r\n    }\r\n    setStrokeColor(color) {\r\n        if (color) {\r\n            this._drawToolOptions.stroke = color;\r\n            this.fabricCanvas.freeDrawingBrush.color = color;\r\n        }\r\n        else {\r\n            this._drawToolOptions.stroke = 'transparent';\r\n            this.fabricCanvas.freeDrawingBrush.color = 'black';\r\n        }\r\n        this.setToolOptions();\r\n    }\r\n    setStrokeDash1(value) {\r\n        if (value) {\r\n            const dash = value * (this._drawToolOptions.strokeWidth ?? 1);\r\n            const other = this._drawToolOptions.strokeDashArray\r\n                && this._drawToolOptions.strokeDashArray.length\r\n                && this._drawToolOptions.strokeDashArray.length >= 3\r\n                ? this._drawToolOptions.strokeDashArray[2]\r\n                : dash;\r\n            let space = Math.max((this._drawToolOptions.strokeWidth ?? 1), Math.min(dash, other) / 2);\r\n            if (this._drawToolOptions.strokeLineCap === 'round') {\r\n                space += (this._drawToolOptions.strokeWidth ?? 1);\r\n            }\r\n            this._drawToolOptions.strokeDashArray = [dash, space, other, space];\r\n            this.fabricCanvas.freeDrawingBrush.strokeDashArray = [dash, space, other, space];\r\n        }\r\n        else {\r\n            this._drawToolOptions.strokeDashArray = undefined;\r\n            this.fabricCanvas.freeDrawingBrush.strokeDashArray = undefined;\r\n        }\r\n        this.setToolOptions();\r\n    }\r\n    setStrokeDash2(value) {\r\n        if (value) {\r\n            const dash = value * (this._drawToolOptions.strokeWidth ?? 1);\r\n            const other = this._drawToolOptions.strokeDashArray\r\n                && this._drawToolOptions.strokeDashArray.length\r\n                && this._drawToolOptions.strokeDashArray.length >= 1\r\n                ? this._drawToolOptions.strokeDashArray[0]\r\n                : dash;\r\n            let space = Math.max((this._drawToolOptions.strokeWidth ?? 1), Math.min(dash, other) / 2);\r\n            if (this._drawToolOptions.strokeLineCap === 'round') {\r\n                space += (this._drawToolOptions.strokeWidth ?? 1);\r\n            }\r\n            this._drawToolOptions.strokeDashArray = [other, space, dash, space];\r\n            this.fabricCanvas.freeDrawingBrush.strokeDashArray = [other, space, dash, space];\r\n        }\r\n        else {\r\n            this._drawToolOptions.strokeDashArray = undefined;\r\n            this.fabricCanvas.freeDrawingBrush.strokeDashArray = undefined;\r\n        }\r\n        this.setToolOptions();\r\n    }\r\n    setStrokeWidth(value) {\r\n        value ?? (value = 1);\r\n        if (this._drawToolOptions.strokeWidth === value) {\r\n            return;\r\n        }\r\n        if (this._drawToolOptions.strokeDashArray\r\n            && this._drawToolOptions.strokeDashArray.length\r\n            && this._drawToolOptions.strokeDashArray.length >= 3) {\r\n            const dash1 = this._drawToolOptions.strokeDashArray[0] * value / (this._drawToolOptions.strokeWidth ?? 1);\r\n            const dash2 = this._drawToolOptions.strokeDashArray[2] * value / (this._drawToolOptions.strokeWidth ?? 1);\r\n            const space = Math.max((this._drawToolOptions.strokeWidth ?? 1), Math.min(dash1, dash2) / 2);\r\n            this._drawToolOptions.strokeDashArray = [dash1, space, dash2, space];\r\n        }\r\n        this._drawToolOptions.strokeWidth = value;\r\n        this.fabricCanvas.freeDrawingBrush.width = value;\r\n        this.setToolOptions();\r\n    }\r\n    undo() {\r\n        this.stateManager.undo();\r\n    }\r\n    constrainView() {\r\n        const vpt = this.fabricCanvas.viewportTransform;\r\n        const zoom = this.fabricCanvas.getZoom();\r\n        if (!vpt) {\r\n            return;\r\n        }\r\n        const width = this.fabricCanvas.getWidth();\r\n        if (vpt[4] >= 0) {\r\n            vpt[4] = 0;\r\n        }\r\n        else if (vpt[4] < width - width * zoom) {\r\n            vpt[4] = width - width * zoom;\r\n        }\r\n        const height = this.fabricCanvas.getHeight();\r\n        if (vpt[5] >= 0) {\r\n            vpt[5] = 0;\r\n        }\r\n        else if (vpt[5] < height - height * zoom) {\r\n            vpt[5] = height - height * zoom;\r\n        }\r\n    }\r\n    drawBorder() {\r\n        if (this._border) {\r\n            this.fabricCanvas.remove(this._border);\r\n        }\r\n        if (!this._borderWidth) {\r\n            return;\r\n        }\r\n        this._border = new fabric.Rect({\r\n            left: 0,\r\n            top: 0,\r\n            width: this.fabricCanvas.getWidth() - this._borderWidth,\r\n            height: this.fabricCanvas.getHeight() - this._borderWidth,\r\n            fill: '',\r\n            stroke: this._borderColor || 'white',\r\n            strokeWidth: this._borderWidth,\r\n            selectable: false,\r\n            evented: false,\r\n        });\r\n        this.fabricCanvas.add(this._border);\r\n        this.fabricCanvas.requestRenderAll();\r\n    }\r\n    initializeEvents() {\r\n        this.fabricCanvas.on('mouse:down', (e) => {\r\n            const _e = e.e;\r\n            this._alt = _e.altKey;\r\n            this._ctl = _e.ctrlKey;\r\n            this._shift = _e.shiftKey;\r\n            const pointer = this.fabricCanvas.getPointer(e.e);\r\n            this.mouseDown(pointer.x, pointer.y);\r\n        });\r\n        this.fabricCanvas.on('mouse:move', (e) => {\r\n            if (this._mouseDown) {\r\n                const _e = e.e;\r\n                this._alt = _e.altKey;\r\n                this._ctl = _e.ctrlKey;\r\n                this._shift = _e.shiftKey;\r\n                const pointer = this.fabricCanvas.getPointer(e.e);\r\n                this.mouseMove(pointer.x, pointer.y);\r\n            }\r\n        });\r\n        this.fabricCanvas.on('mouse:up', (e) => {\r\n            this._mouseDown = false;\r\n            this.fabricCanvas.selection = true;\r\n            if (this._panning && this.fabricCanvas.viewportTransform) {\r\n                this.fabricCanvas.setViewportTransform(this.fabricCanvas.viewportTransform);\r\n            }\r\n            this._panning = false;\r\n            if (this._createdObject instanceof fabric.IText) {\r\n                this._cursorMode = 1;\r\n                if (this._createdObject.hiddenTextarea) {\r\n                    this._createdObject.hiddenTextarea.focus();\r\n                }\r\n            }\r\n            if (this._moving) {\r\n                if (this._createdObject) {\r\n                    this.fabricCanvas.setActiveObject(this._createdObject);\r\n                }\r\n                this.saveState();\r\n                this._moving = false;\r\n            }\r\n            this._createdObject = undefined;\r\n        });\r\n        this.fabricCanvas.on('mouse:wheel', (e) => {\r\n            const _e = e.e;\r\n            let zoom = Math.max(1, Math.min(20, this.fabricCanvas.getZoom() * (0.999 ** _e.deltaY)));\r\n            this.fabricCanvas.zoomToPoint(new fabric.Point(_e.offsetX, _e.offsetY), zoom);\r\n            _e.preventDefault();\r\n            _e.stopPropagation();\r\n            this.constrainView();\r\n        });\r\n        this.fabricCanvas.on('object:modified', (e) => {\r\n            this.saveState();\r\n        });\r\n        this.fabricCanvas.on('selection:created', (e) => {\r\n            this._cursorMode = 1;\r\n        });\r\n        this.fabricCanvas.on('selection:cleared', (e) => {\r\n            this._cursorMode = 0;\r\n        });\r\n        this.fabricCanvas.on('text:editing:entered', (e) => {\r\n            this._listeningForKeys = false;\r\n            this._cursorMode = 1;\r\n            const obj = e.target;\r\n            if (obj instanceof fabric.IText\r\n                && obj.curvePoint\r\n                && (obj.curvePoint.x !== 0\r\n                    || obj.curvePoint.y !== 0)) {\r\n                obj.curvePoint = { x: 0, y: 0 };\r\n                obj.path = undefined;\r\n            }\r\n        });\r\n        this.fabricCanvas.on('text:editing:exited', (e) => {\r\n            this._listeningForKeys = true;\r\n            this._cursorMode = 0;\r\n            if (e.target) {\r\n                this.fabricCanvas.setActiveObject(e.target);\r\n            }\r\n            this.saveState();\r\n        });\r\n        window.addEventListener(\"resize\", this.resizeEvent.bind(this));\r\n        window.addEventListener(\"keydown\", this.keyDownEvent.bind(this));\r\n        window.addEventListener(\"keyup\", this.keyUpEvent.bind(this));\r\n    }\r\n    keyDownEvent(ev) {\r\n        if (!this._listeningForKeys) {\r\n            return;\r\n        }\r\n        if (ev.key === \" \") {\r\n            this._space = true;\r\n        }\r\n        else if (ev.key === \"Delete\") {\r\n            this.deleteObjects();\r\n        }\r\n        else if (ev.key === \"Copy\"\r\n            || (ev.key === \"c\" && ev.ctrlKey)) {\r\n            this.copy();\r\n        }\r\n        else if (ev.key === \"Cut\"\r\n            || (ev.key === \"x\" && ev.ctrlKey)) {\r\n            this.cut();\r\n        }\r\n        else if (ev.key === \"Paste\"\r\n            || (ev.key === \"v\" && ev.ctrlKey)) {\r\n            this.paste();\r\n        }\r\n        else if (ev.key === \"Undo\"\r\n            || (ev.key === \"z\" && ev.ctrlKey)) {\r\n            this.undo();\r\n        }\r\n        else if (ev.key === \"Redo\"\r\n            || (ev.key === \"y\" && ev.ctrlKey)) {\r\n            this.redo();\r\n        }\r\n    }\r\n    keyUpEvent(ev) {\r\n        if (ev.key === \" \") {\r\n            this._space = false;\r\n        }\r\n    }\r\n    make(startX, startY, endX, endY) {\r\n        if (this._redraw) {\r\n            this.fabricCanvas.remove(...this.fabricCanvas.getObjects());\r\n        }\r\n        const obj = this._drawTool.make(startX, startY, endX, endY, this._drawToolOptions, this._shift, this._font);\r\n        if (!this._enableRotation) {\r\n            obj.setControlVisible('mtr', false);\r\n        }\r\n        this.fabricCanvas.add(obj);\r\n        this.saveState();\r\n        return obj;\r\n    }\r\n    mouseDown(x, y) {\r\n        if (this._space) {\r\n            this._mouseDown = true;\r\n            this._panning = true;\r\n            this.fabricCanvas.selection = false;\r\n            this._lastX = x;\r\n            this._lastY = y;\r\n        }\r\n        else if (this._alt) {\r\n            const obj = this.fabricCanvas.getActiveObject();\r\n            if (obj instanceof fabric.Path) {\r\n                const tool = this._drawTools[3];\r\n                this._mouseDown = true;\r\n                this.fabricCanvas.selection = false;\r\n                tool.addPoint(obj, x, y);\r\n            }\r\n        }\r\n        else if (this._cursorMode === 0\r\n            && !this.fabricCanvas.isDrawingMode\r\n            && !this._alt\r\n            && !this._ctl\r\n            && this.fabricCanvas.getActiveObjects().length === 0) {\r\n            this._mouseDown = true;\r\n            this.fabricCanvas.selection = false;\r\n            this._lastX = x;\r\n            this._lastY = y;\r\n        }\r\n    }\r\n    mouseMove(x, y) {\r\n        if (this._panning) {\r\n            const vpt = this.fabricCanvas.viewportTransform;\r\n            const zoom = this.fabricCanvas.getZoom();\r\n            if (vpt) {\r\n                vpt[4] += (x - this._lastX) * zoom;\r\n                vpt[5] += (y - this._lastY) * zoom;\r\n                this.constrainView();\r\n                this.fabricCanvas.requestRenderAll();\r\n            }\r\n            this._lastX = x;\r\n            this._lastY = y;\r\n        }\r\n        else if (this._createdObject) {\r\n            this._moving = true;\r\n            this._drawTool.resize(this._createdObject, x, y, this._ctl, this._alt, this._shift);\r\n            this.fabricCanvas.renderAll();\r\n        }\r\n        else {\r\n            this._createdObject = this.make(this._lastX, this._lastY, x, y);\r\n        }\r\n    }\r\n    resizeEventInner() {\r\n        if (this._resizeTimeoutInner) {\r\n            clearTimeout(this._resizeTimeoutInner);\r\n        }\r\n        const handler = () => {\r\n            if (this.editorCanvas.parentElement\r\n                && this.editorCanvas.parentElement.parentElement) {\r\n                const bounds = this.editorCanvas.parentElement.parentElement.getBoundingClientRect();\r\n                this.fabricCanvas.setDimensions({\r\n                    width: `${bounds.width}px`,\r\n                    height: `${Math.round(bounds.width / this._aspectRatio)}px`,\r\n                }, {\r\n                    cssOnly: true\r\n                });\r\n                this.drawBorder();\r\n            }\r\n        };\r\n        this._resizeTimeoutInner = setTimeout(handler, 10);\r\n    }\r\n    saveState() {\r\n        this.stateManager.saveState();\r\n        this.fabricCanvas.renderAll();\r\n    }\r\n    setToolOptions() {\r\n        this.fabricCanvas.getActiveObjects().forEach((obj) => {\r\n            obj.set(this._drawToolOptions);\r\n        });\r\n        this.fabricCanvas.requestRenderAll();\r\n    }\r\n}\r\nlet editor;\r\nexport function bringForward() {\r\n    if (editor) {\r\n        editor.bringForward();\r\n    }\r\n}\r\nexport function bringToFront() {\r\n    if (editor) {\r\n        editor.bringToFront();\r\n    }\r\n}\r\nexport function clear() {\r\n    if (editor) {\r\n        editor.clear();\r\n    }\r\n}\r\nexport function copy() {\r\n    if (editor) {\r\n        editor.copy();\r\n    }\r\n}\r\nexport function cut() {\r\n    if (editor) {\r\n        editor.cut();\r\n    }\r\n}\r\nexport function deleteObjects() {\r\n    if (editor) {\r\n        editor.deleteObjects();\r\n    }\r\n}\r\nexport function dispose() {\r\n    if (editor) {\r\n        editor.dispose();\r\n    }\r\n}\r\nexport function enableRotation(value) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.enableRotation(value || false);\r\n}\r\nexport function getJSON() {\r\n    if (editor) {\r\n        return JSON.stringify(editor.fabricCanvas);\r\n    }\r\n    return '';\r\n}\r\nexport async function getObjUrl() {\r\n    if (!editor) {\r\n        return \"\";\r\n    }\r\n    const url = await new Promise(function (resolve) {\r\n        if (editor) {\r\n            editor.fabricCanvas.discardActiveObject().renderAll();\r\n            editor.editorCanvas.toBlob((blob) => {\r\n                if (blob) {\r\n                    resolve(URL.createObjectURL(blob));\r\n                }\r\n                else {\r\n                    resolve(\"\");\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            resolve(\"\");\r\n        }\r\n    });\r\n    return url;\r\n}\r\nexport function loadEditor(editorCanvas, imageUrl) {\r\n    if (!editor) {\r\n        editor = new Editor(editorCanvas);\r\n    }\r\n    else {\r\n        editor.clear();\r\n    }\r\n    if (imageUrl) {\r\n        editor.setBackgroundImage(imageUrl);\r\n    }\r\n}\r\nexport function loadJSON(json) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    if (json) {\r\n        editor.fabricCanvas.loadFromJSON(json, () => {\r\n            const fonts = [];\r\n            editor.fabricCanvas.forEachObject((obj) => {\r\n                if (obj instanceof fabric.IText\r\n                    && obj.fontFamily) {\r\n                    fonts.push(obj.fontFamily);\r\n                }\r\n            });\r\n            if (fonts.length) {\r\n                WebFont.load({\r\n                    classes: false,\r\n                    google: {\r\n                        families: fonts\r\n                    },\r\n                    active: function () {\r\n                        editor.fabricCanvas.requestRenderAll();\r\n                    },\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\nexport function paste() {\r\n    if (editor) {\r\n        editor.paste();\r\n    }\r\n}\r\nexport function redo() {\r\n    if (editor) {\r\n        editor.redo();\r\n    }\r\n}\r\nexport function resize() {\r\n    if (editor) {\r\n        editor.resizeEvent();\r\n    }\r\n}\r\nexport function revokeObjUrl(url) {\r\n    URL.revokeObjectURL(url);\r\n}\r\nexport function saveImage() {\r\n    if (editor) {\r\n        const link = document.createElement('a');\r\n        link.setAttribute('download', 'image.png');\r\n        link.setAttribute('href', editor.fabricCanvas.toDataURL({ format: 'image/png' }).replace('image/png', 'image/octet-stream'));\r\n        link.click();\r\n    }\r\n}\r\nexport function setBackgroundImage(imageUrl) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setBackgroundImage(imageUrl);\r\n}\r\nexport function sendBackwards() {\r\n    if (editor) {\r\n        editor.sendBackwards();\r\n    }\r\n}\r\nexport function sendToBack() {\r\n    if (editor) {\r\n        editor.sendToBack();\r\n    }\r\n}\r\nexport function setBorderColor(color) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setBorderColor(color);\r\n}\r\nexport function setBorderPercent(value) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setBorderPercent(value);\r\n}\r\nexport function setBorderWidth(value) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setBorderWidth(value);\r\n}\r\nexport function setDrawingMode(mode) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setDrawingMode(mode);\r\n}\r\nexport function setFillColor(color) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setFillColor(color);\r\n}\r\nexport function setFont(font) {\r\n    if (!font) {\r\n        return;\r\n    }\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setFont(font);\r\n}\r\nexport function setLineCap(cap) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setLineCap(cap);\r\n}\r\nexport function setRedraw(value) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setRedraw(value || false);\r\n}\r\nexport function setStrokeColor(color) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setStrokeColor(color);\r\n}\r\nexport function setStrokeDash1(value) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setStrokeDash1(value);\r\n}\r\nexport function setStrokeDash2(value) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setStrokeDash2(value);\r\n}\r\nexport function setStrokeWidth(value) {\r\n    if (!editor) {\r\n        return;\r\n    }\r\n    editor.setStrokeWidth(value);\r\n}\r\nexport function undo() {\r\n    if (editor) {\r\n        editor.undo();\r\n    }\r\n}\r\n//# sourceMappingURL=editor.js.map"],"names":["EllipseDrawTool","[object Object]","this","originX","originY","drawingMode","startX","startY","endX","endY","options","shift","size","Math","max","abs","fabric","Ellipse","left","top","rx","ry","object","x","y","ctl","alt","set","setCoords","LineDrawTool","sizeX","sizeY","maxSize","Line","x1","y1","x2","y2","PathDrawTool","path","points","length","push","center","getCenterPoint","newPathObject","Path","width","height","dirty","pathOffset","setPositionByOrigin","addControlPoint","obj","controls","Object","prototype","Control","positionHandler","curvePositionHandler","actionHandler","curveActionHandler","actionName","pointIndex","objectPath","movingPointIndex","index","pointIsCurve","eventData","transform","target","activeItem","currentControl","__corner","baseSize","_getNonTransformedDimensions","_getTransformedDimensions","strokeWidth","stroke","strokeUniform","scaleX","scaleY","localPoint","toLocalPoint","Point","finalLocalPoint","editor","dim","finalMatrix","fabricObject","previousPointX","previousPointY","canvas","viewportTransform","util","transformPoint","multiplyTransformMatrices","calcTransformMatrix","RectangleDrawTool","Rect","TextDrawTool","font","absSizeX","absSizeY","xGreater","sqrt","angle","atan2","PI","opt","fontSize","fill","perPixelTargetFind","selectable","fontFamily","text","IText","textCurvePositionHandler","textCurveActionHandler","enterEditing","curvePoint","undefined","rotateMatrix","_calcRotateMatrix","translateMatrix","_calcTranslateMatrix","vpt","getViewportTransform","startMatrix","_calculateCurrentDimensions","pathLeft","pathRight","pathObject","invertTransform","scaledCurvePoint","fabricCanvas","add","remove","TriangleDrawTool","Triangle","StateManager","_locked","_maxCount","_redoStack","_undoStack","_currentState","toDatalessJSON","callback","applyState","pop","stack","state","self","loadFromJSON","EditorClipboard","getActiveObject","clone","_clipObject","copy","deleteObjects","clonedObject","discardActiveObject","type","forEachObject","setActiveObject","requestRenderAll","stateManager","saveState","Editor","editorCanvas","_alt","_ctl","_shift","_space","_aspectRatio","_cursorMode","_enableRotation","_lastX","_lastY","_listeningForKeys","_mouseDown","_moving","_panning","_redraw","_drawTools","_drawTool","_drawToolOptions","shadow","Canvas","selection","parentElement","bounds","getBoundingClientRect","setDimensions","round","initializeEvents","clipboard","space","bringForward","bringToFront","clear","cut","window","removeEventListener","resizeEvent","dispose","getActiveObjects","value","setControlVisible","paste","redo","_resizeTimeout","clearTimeout","setTimeout","cssOnly","resizeEventInner","sendBackwards","sendToBack","imageUrl","_backgroundUrl","Image","fromURL","image","_borderWidth","backstoreOnly","setBackgroundImage","renderAll","bind","color","_borderColor","drawBorder","setBorderWidth","min","mode","isDrawingMode","setToolOptions","WebFont","load","classes","google","families","active","_font","cap","strokeLineCap","freeDrawingBrush","dash","other","strokeDashArray","dash1","dash2","undo","zoom","getZoom","getWidth","getHeight","_border","evented","on","e","_e","altKey","ctrlKey","shiftKey","pointer","getPointer","mouseDown","mouseMove","setViewportTransform","_createdObject","hiddenTextarea","focus","deltaY","zoomToPoint","offsetX","offsetY","preventDefault","stopPropagation","constrainView","addEventListener","keyDownEvent","keyUpEvent","ev","key","getObjects","make","tool","addPoint","resize","_resizeTimeoutInner","forEach","enableRotation","getJSON","JSON","stringify","async","getObjUrl","Promise","resolve","toBlob","blob","URL","createObjectURL","loadEditor","loadJSON","json","fonts","revokeObjUrl","url","revokeObjectURL","saveImage","link","document","createElement","setAttribute","toDataURL","format","replace","click","setBorderColor","setBorderPercent","setDrawingMode","setFillColor","setFont","setLineCap","setRedraw","setStrokeColor","setStrokeDash1","setStrokeDash2","setStrokeWidth"],"mappings":"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"}